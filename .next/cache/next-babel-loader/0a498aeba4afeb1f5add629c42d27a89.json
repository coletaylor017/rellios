{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/piece.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nvar moment = require('moment');\n\nvar Piece = /*#__PURE__*/function (_Component) {\n  _inherits(Piece, _Component);\n\n  var _super = _createSuper(Piece);\n\n  function Piece() {\n    _classCallCheck(this, Piece);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Piece, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, this.props.pieceData.title), this.props.pieceData.created ? __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, __jsx(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, \"Created \", this.props.pieceData.created)) : null, __jsx(Image, {\n        style: {\n          maxWidth: \"80%\",\n          maxHeight: \"40em\"\n        },\n        fluid: true,\n        src: process.env.IMAGE_BASE_URI + this.props.pieceData.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }), __jsx(\"p\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, this.props.pieceData.description));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(process.env.CRUD_API_URI + \"/pieces/\" + ctx.query.id));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error fetching /pieces\");\n              console.log(_context.t0);\n\n            case 10:\n              return _context.abrupt(\"return\", {\n                pieceData: response.data\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    }\n  }]);\n\n  return Piece;\n}(Component);\n\nexport { Piece as default };","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/piece.js"],"names":["React","Component","MarkdownView","Link","Container","Image","axios","moment","require","Piece","props","pieceData","title","created","maxWidth","maxHeight","process","env","IMAGE_BASE_URI","image","url","description","ctx","get","CRUD_API_URI","query","id","response","console","log","data"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;IAEqBC,K;;;;;;;;;;;;;6BAgBR;AACL,aAAO,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,KAA1B,CADG,EAEF,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,OAArB,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAY,KAAKH,KAAL,CAAWC,SAAX,CAAqBE,OAAjC,CAAH,CADH,GAEK,IAJH,EAMH,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAd;AAAsD,QAAA,KAAK,MAA3D;AAA4D,QAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,cAAZ,GAA6B,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,KAArB,CAA2BC,GAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANG,EAOH;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKV,KAAL,CAAWC,SAAX,CAAqBU,WAA1C,CAPG,CAAP;AASH;;;oCAxB4BC,G;;;;;;;;+CAGJhB,KAAK,CAACiB,GAAN,CAAUP,OAAO,CAACC,GAAR,CAAYO,YAAZ,GAA2B,UAA3B,GAAwCF,GAAG,CAACG,KAAJ,CAAUC,EAA5D,C;;;AAAjBC,cAAAA,Q;;;;;;;AAGAC,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR;;;+CAEG;AACHlB,gBAAAA,SAAS,EAAEgB,QAAQ,CAACG;AADjB,e;;;;;;;;;;;;EAXoB7B,S;;SAAdQ,K","sourcesContent":["import React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nconst moment = require('moment');\n\nexport default class Piece extends Component {\n\n    static async getInitialProps(ctx) {\n        let response;\n        try {\n            response = await axios.get(process.env.CRUD_API_URI + \"/pieces/\" + ctx.query.id);\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n            console.log(error);\n        }\n        return {\n            pieceData: response.data\n        }\n    }\n\n    render() {\n        return <Container className=\"text-center\">\n            <h2>{this.props.pieceData.title}</h2>\n            {this.props.pieceData.created ?\n                <p><i>Created {this.props.pieceData.created}</i></p>\n                : null\n            }\n            <Image style={{ maxWidth: \"80%\", maxHeight: \"40em\" }} fluid src={process.env.IMAGE_BASE_URI + this.props.pieceData.image.url} />\n            <p className=\"mt-4\">{this.props.pieceData.description}</p>\n        </Container>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}