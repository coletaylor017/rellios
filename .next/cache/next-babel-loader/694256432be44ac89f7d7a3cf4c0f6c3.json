{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Piece from '../components/Piece';\nimport axios from 'axios';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var pieces = this.props.pieces.map(function (piece) {\n        return __jsx(Piece, {\n          key: piece._id,\n          title: piece.title,\n          imageSrc: _this.props.crud_api_uri + piece.image.url,\n          description: piece.description,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        });\n      });\n      return __jsx(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }\n      }, __jsx(\"div\", {\n        className: \"row text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, pieces));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(this.props.crud_api_uri + \"/pieces\"); // environment variables should be available on server side. Should be problematic when this page is navigated to using a link\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(this.props.crud_api_uri + \"/pieces\"));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error fetching /pieces\");\n\n            case 10:\n              return _context.abrupt(\"return\", {\n                pieces: response.data,\n                crud_api_uri: this.props.crud_api_uri\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/index.js"],"names":["React","Component","Piece","axios","Index","pieces","props","map","piece","_id","title","crud_api_uri","image","url","description","console","log","get","response","data"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,K;;;;;;;;;;;;;6BAgBR;AAAA;;AACL,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACtC,MAAC,KAAD;AACI,UAAA,GAAG,EAAEA,KAAK,CAACC,GADf;AAEI,UAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,UAAA,QAAQ,EAAE,KAAI,CAACJ,KAAL,CAAWK,YAAX,GAA0BH,KAAK,CAACI,KAAN,CAAYC,GAHpD;AAII,UAAA,WAAW,EAAEL,KAAK,CAACM,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsC;AAAA,OAA3B,CAAf;AASA,aAAO;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,MADL,CADG,CAAP;AAKH;;;;;;;;;;AA3BOU,cAAAA,OAAO,CAACC,GAAR,CAAa,KAAKV,KAAL,CAAWK,YAAZ,GAA4B,SAAxC,E,CACA;;;+CACiBR,KAAK,CAACc,GAAN,CAAW,KAAKX,KAAL,CAAWK,YAAZ,GAA4B,SAAtC,C;;;AAAjBO,cAAAA,Q;;;;;;;AAGAH,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;;+CAEG;AACHX,gBAAAA,MAAM,EAAEa,QAAQ,CAACC,IADd;AAEHR,gBAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK;AAFtB,e;;;;;;;;;;;;EAXoBV,S;;SAAdG,K","sourcesContent":["import React, { Component } from 'react';\nimport Piece from '../components/Piece'\nimport axios from 'axios';\n\nexport default class Index extends Component {\n    static async getInitialProps() {\n        let response;\n        try {\n            console.log((this.props.crud_api_uri) + \"/pieces\");\n            // environment variables should be available on server side. Should be problematic when this page is navigated to using a link\n            response = await axios.get((this.props.crud_api_uri) + \"/pieces\");\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n        }\n        return {\n            pieces: response.data,\n            crud_api_uri: this.props.crud_api_uri\n        }\n    }\n    render() {\n        const pieces = this.props.pieces.map(piece =>\n            <Piece\n                key={piece._id}\n                title={piece.title}\n                imageSrc={this.props.crud_api_uri + piece.image.url}\n                description={piece.description}\n            />\n        );\n\n        return <div className=\"container mt-5\">\n            <div className=\"row text-center\">\n                {pieces}\n            </div>\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}