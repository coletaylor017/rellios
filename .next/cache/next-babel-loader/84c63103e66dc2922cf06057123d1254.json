{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../stylesheets/app.css';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n//     return {\n//         ...appProps,\n//         crud_api_uri: process.env.CRUD_API_URI\n//     }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/_app.js"],"names":["React","Header","Footer","MyApp","Component","pageProps"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AACA,OAAO,wBAAP;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,MAAC,SAAD,eAAeA,SAAf;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFG,EAGH,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,CAAP;AAKH,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../stylesheets/app.css';\n\nfunction MyApp({ Component, pageProps }) {\n    return <div>\n        <Header />\n        <Component {...pageProps} className=\"my-5\" />\n        <Footer />\n    </div>\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n\n//     return {\n//         ...appProps,\n//         crud_api_uri: process.env.CRUD_API_URI\n//     }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}