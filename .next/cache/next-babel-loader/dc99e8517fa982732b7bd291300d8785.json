{"ast":null,"code":"var _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/post.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nexport default class Post extends Component {\n  static async getInitialProps(ctx) {\n    let response;\n\n    try {\n      response = await axios.get(process.env.CRUD_API_URI + \"/posts/\" + ctx.query.id);\n    } catch (error) {\n      console.log(\"error fetching /pieces\");\n      console.log(error);\n    }\n\n    return _objectSpread({}, response.data);\n  }\n\n  render() {\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, this.props.date), __jsx(MarkdownView, {\n      markdown: this.props.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/post.js"],"names":["React","Component","MarkdownView","Link","Container","axios","Post","getInitialProps","ctx","response","get","process","env","CRUD_API_URI","query","id","error","console","log","data","render","props","date","body"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAExC,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,YAAZ,GAA2B,SAA3B,GAAuCL,GAAG,CAACM,KAAJ,CAAUC,EAA3D,CAAjB;AACH,KAFD,CAGA,OAAOC,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,6BACOP,QAAQ,CAACU,IADhB;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWC,IAAhB,CADG,EAEH,MAAC,YAAD;AACI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,IADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAMH;;AAvBuC","sourcesContent":["import React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\n\nexport default class Post extends Component {\n\n    static async getInitialProps(ctx) {\n        let response;\n        try {\n            response = await axios.get(process.env.CRUD_API_URI + \"/posts/\" + ctx.query.id);\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n            console.log(error);\n        }\n        return {\n            ...response.data\n        }\n    }\n\n    render() {\n        return <Container>\n            <h4>{this.props.date}</h4>\n            <MarkdownView\n                markdown={this.props.body}\n            />\n        </Container>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}