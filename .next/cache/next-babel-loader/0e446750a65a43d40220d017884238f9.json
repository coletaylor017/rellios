{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/post.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nvar moment = require('moment');\n\nvar Post = /*#__PURE__*/function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        md: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, this.props.title), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }\n      }, moment(this.props.date).format(\"MMMM D, YYYY\"))), __jsx(MarkdownView, {\n        classname: \"blog-post\",\n        markdown: this.props.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })), __jsx(Col, {\n        className: \"text-center\",\n        style: {\n          backgroundColor: \"rgb(0,0,0,0.03)\"\n        },\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, __jsx(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, __jsx(\"u\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }\n      }, \"Featured in this post:\"))), __jsx(Image, {\n        fluid: true,\n        className: \"mx-auto mt-4 mb-3 w-75\",\n        src: this.props.piece.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }), __jsx(Link, {\n        href: {\n          pathname: \"piece\",\n          query: {\n            id: this.props.piece._id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, this.props.piece.title)))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(process.env.CRUD_API_URI + \"/posts/\" + ctx.query.id));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error fetching /pieces\");\n              console.log(_context.t0);\n\n            case 10:\n              return _context.abrupt(\"return\", {\n                title: response.data.title,\n                date: response.data.createdAt,\n                body: response.data.body,\n                piece: response.data.piece\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/post.js"],"names":["React","Component","MarkdownView","Link","Container","Row","Col","Image","axios","moment","require","Post","props","title","date","format","body","backgroundColor","piece","image","url","pathname","query","id","_id","ctx","get","process","env","CRUD_API_URI","response","console","log","data","createdAt"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;IAEqBC,I;;;;;;;;;;;;;6BAmBR;AACL,aAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,MAAM,CAAC,KAAKG,KAAL,CAAWE,IAAZ,CAAN,CAAwBC,MAAxB,CAA+B,cAA/B,CAAJ,CAAH,CAFJ,EAGI,MAAC,YAAD;AAAc,QAAA,SAAS,EAAC,WAAxB;AACI,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,IADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAQI,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAApC;AAA4E,QAAA,EAAE,EAAE,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAH,CAAJ,CADJ,EAEI,MAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,SAAS,EAAC,wBAAvB;AAAgD,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,KAAjB,CAAuBC,GAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,EAAE,EAAE,KAAKX,KAAL,CAAWM,KAAX,CAAiBM;AAAvB;AAA5B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKZ,KAAL,CAAWM,KAAX,CAAiBL,KAArB,CADJ,CAHJ,CARJ,CADG,CAAP;AAkBH;;;oCApC4BY,G;;;;;;;;+CAGJjB,KAAK,CAACkB,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,YAAZ,GAA2B,SAA3B,GAAuCJ,GAAG,CAACH,KAAJ,CAAUC,EAA3D,C;;;AAAjBO,cAAAA,Q;;;;;;;AAGAC,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR;;;+CAEG;AACHnB,gBAAAA,KAAK,EAAEiB,QAAQ,CAACG,IAAT,CAAcpB,KADlB;AAEHC,gBAAAA,IAAI,EAAEgB,QAAQ,CAACG,IAAT,CAAcC,SAFjB;AAGHlB,gBAAAA,IAAI,EAAEc,QAAQ,CAACG,IAAT,CAAcjB,IAHjB;AAIHE,gBAAAA,KAAK,EAAEY,QAAQ,CAACG,IAAT,CAAcf;AAJlB,e;;;;;;;;;;;;EAXmBjB,S;;SAAbU,I","sourcesContent":["import React, { Component } from 'react';\nimport MarkdownView from 'react-showdown';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nconst moment = require('moment');\n\nexport default class Post extends Component {\n\n    static async getInitialProps(ctx) {\n        let response;\n        try {\n            response = await axios.get(process.env.CRUD_API_URI + \"/posts/\" + ctx.query.id);\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n            console.log(error);\n        }\n        return {\n            title: response.data.title,\n            date: response.data.createdAt,\n            body: response.data.body,\n            piece: response.data.piece\n        }\n    }\n\n    render() {\n        return <Container>\n            <Row>\n                <Col md={9} >\n                    <h2>{this.props.title}</h2>\n                    <p><i>{moment(this.props.date).format(\"MMMM D, YYYY\")}</i></p>\n                    <MarkdownView classname=\"blog-post\"\n                        markdown={this.props.body}\n                    />\n                </Col>\n                <Col className=\"text-center\" style={{ backgroundColor: \"rgb(0,0,0,0.03)\" }} md={3} >\n                    <h5><i><u>Featured in this post:</u></i></h5>\n                    <Image fluid className=\"mx-auto mt-4 mb-3 w-75\" src={this.props.piece.image.url} />\n                    <Link href={{ pathname: \"piece\", query: { id: this.props.piece._id } }}>\n                        <a>{this.props.piece.title}</a>\n                    </Link>\n                </Col>\n            </Row>\n        </Container>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}