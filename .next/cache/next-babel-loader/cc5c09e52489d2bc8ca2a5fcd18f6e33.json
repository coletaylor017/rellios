{"ast":null,"code":"var _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Piece from '../components/Piece';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\nexport default class Index extends Component {\n  static async getInitialProps() {\n    let response;\n\n    try {\n      response = await axios.get(process.env.CRUD_API_URI + \"/pieces\");\n    } catch (error) {\n      console.log(\"error fetching /pieces\");\n      console.log(error);\n    }\n\n    if (true) {\n      console.log(\"dev!\");\n      return {\n        pieces: response.data,\n        imageBaseUri: \"http://localhost:1337\"\n      };\n    }\n\n    console.log(\"production!\");\n    return {\n      pieces: response.data,\n      imageBaseUri: \"\"\n    };\n  }\n\n  render() {\n    const pieces = this.props.pieces.map(piece => __jsx(Piece, {\n      key: piece._id,\n      title: piece.title,\n      imageSrc: this.props.imageBaseUri + piece.image.url,\n      description: piece.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n    return __jsx(Container, {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }, __jsx(Row, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, pieces));\n  }\n\n}","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/index.js"],"names":["React","Component","Piece","Container","Row","axios","Index","getInitialProps","response","get","process","env","CRUD_API_URI","error","console","log","pieces","data","imageBaseUri","render","props","map","piece","_id","title","image","url","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AACzC,eAAaM,eAAb,GAA+B;AAC3B,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,YAAZ,GAA2B,SAArC,CAAjB;AACH,KAFD,CAGA,OAAOC,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,cAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO;AACHC,QAAAA,MAAM,EAAER,QAAQ,CAACS,IADd;AAEHC,QAAAA,YAAY,EAAE;AAFX,OAAP;AAIH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAO;AACHC,MAAAA,MAAM,EAAER,QAAQ,CAACS,IADd;AAEHC,MAAAA,YAAY,EAAE;AAFX,KAAP;AAMH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMH,MAAM,GAAG,KAAKI,KAAL,CAAWJ,MAAX,CAAkBK,GAAlB,CAAsBC,KAAK,IACtC,MAAC,KAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,GADf;AAEI,MAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWF,YAAX,GAA0BI,KAAK,CAACG,KAAN,CAAYC,GAHpD;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACK,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,CAAf;AASA,WAAO,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,MADL,CADG,CAAP;AAKH;;AAxCwC","sourcesContent":["import React, { Component } from 'react';\nimport Piece from '../components/Piece';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\n\nexport default class Index extends Component {\n    static async getInitialProps() {\n        let response;\n        try {\n            response = await axios.get(process.env.CRUD_API_URI + \"/pieces\");\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n            console.log(error);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n            console.log(\"dev!\");\n            return {\n                pieces: response.data,\n                imageBaseUri: \"http://localhost:1337\"\n            }\n        }\n        console.log(\"production!\");\n        return {\n            pieces: response.data,\n            imageBaseUri: \"\"\n        }\n\n\n    }\n    render() {\n        const pieces = this.props.pieces.map(piece =>\n            <Piece\n                key={piece._id}\n                title={piece.title}\n                imageSrc={this.props.imageBaseUri + piece.image.url}\n                description={piece.description}\n            />\n        );\n\n        return <Container className=\"mt-5\">\n            <Row className=\"text-center\">\n                {pieces}\n            </Row>\n        </Container>\n    }\n}"]},"metadata":{},"sourceType":"module"}