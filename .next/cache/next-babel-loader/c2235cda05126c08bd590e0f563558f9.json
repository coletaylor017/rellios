{"ast":null,"code":"var _jsxFileName = \"/home/cole/dev-workspace/rellios-frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Head from 'next/head';\nimport '../stylesheets/app.css';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"\\uD835\\uDD97\\uD835\\uDD8A\\uD835\\uDD91\\uD835\\uDD91\\uD835\\uDD8E\\uD835\\uDD94\\uD835\\uDD98\")), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n//     return {\n//         ...appProps,\n//         crud_api_uri: process.env.CRUD_API_URI\n//     }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/home/cole/dev-workspace/rellios-frontend/pages/_app.js"],"names":["React","Header","Footer","Head","MyApp","Component","pageProps"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,wBAAP;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FADJ,CADG,EAIH,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJG,EAKH,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALG,EAMH,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANG,CAAP;AAQH,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Head from 'next/head';\nimport '../stylesheets/app.css';\n\nfunction MyApp({ Component, pageProps }) {\n    return <div>\n        <Head>\n            <title>ùñóùñäùñëùñëùñéùñîùñò</title>\n        </Head>\n        <Header />\n        <Component {...pageProps} />\n        <Footer />\n    </div>\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n// MyApp.getInitialProps = async (appContext) => {\n//     // calls page's `getInitialProps` and fills `appProps.pageProps`\n//     const appProps = await App.getInitialProps(appContext);\n\n//     return {\n//         ...appProps,\n//         crud_api_uri: process.env.CRUD_API_URI\n//     }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}