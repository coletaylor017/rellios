{"version":3,"file":"static/webpack/static/development/pages/index.js.69e2358211824ebcb131.hot-update.js","sources":["webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./pages/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React, { Component } from 'react';\nimport Piece from '../components/Piece';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nexport default class Index extends Component {\n    static async getInitialProps() {\n        let response;\n        try {\n            response = await axios.get(process.env.CRUD_API_URI + \"/pieces\");\n        }\n        catch (error) {\n            console.log(\"error fetching /pieces\");\n            console.log(error);\n        }\n        return {\n            pieces: response.data\n        }\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n            piece: null\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n    }\n\n    /**\n     * Indicates that the modal should be hidden\n     */\n    handleClose() {\n        this.setState({\n            show: false,\n            piece: null\n        });\n    }\n\n    /**\n     * Indicates that the modal should be shown, featuring a piece with the given ID\n     * @param {*} pieceData \n     */\n    handleShow(pieceId) {\n        // find the correct piece to display in the modal\n        const selectedPiece = this.props.pieces.find(function (piece) {\n            return piece._id == pieceId;\n        });\n        this.setState({\n            show: true,\n            piece: selectedPiece\n        });\n    }\n\n    render() {\n        const pieces = this.props.pieces.map(piece =>\n            <Piece\n                key={piece._id}\n                id={piece._id}\n                imageSrc={process.env.IMAGE_BASE_URI + piece.image.url}\n                handleShow={this.handleShow}\n            />\n        );\n\n        return <Container>\n            <Row className=\"text-center\">\n                {pieces}\n            </Row>\n\n            <Modal show={this.state.show} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.state.piece ? this.state.piece.title : null}</Modal.Title>\n                </Modal.Header>\n                <Image src={this.state.piece ? process.env.IMAGE_BASE_URI + this.state.piece.image.url : null} />\n                <Modal.Body>this.state.piece ? this.state.piece.description : null</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.handleClose}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    }\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAIA;AACA;;AADA;;;;;;;AAGA;AACA;AACA;;AACA;AACA;AADA;AACA;;;;;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAhFA;AACA;;;;;A","sourceRoot":""}